<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cassette.Views</name>
    </assembly>
    <members>
        <member name="T:Cassette.Views.Bundles">
            <summary>
            Cassette API facade used by views to reference bundles and render the required HTML elements.
            </summary>
            <remarks>
            Keep overloads to stay compatible with .NET 3.5 (otherwise consumers will get exceptions)
            </remarks>
        </member>
        <member name="M:Cassette.Views.Bundles.Reference(System.String)">
            <summary>
            Adds a reference to a bundle for the current page.
            </summary>
            <param name="assetPathOrBundlePathOrUrl">Either an application relative path to an asset file or bundle. Or a URL of an external resource.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.Reference``1(System.String)">
            <summary>
            Adds a reference to a bundle for the current page.
            </summary>
            <param name="assetPathOrBundlePathOrUrl">Either an application relative path to an asset file or bundle. Or a URL of an external resource.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.Reference(System.String,System.String)">
            <summary>
            Adds a reference to a bundle for the current page.
            </summary>
            <param name="assetPathOrBundlePathOrUrl">Either an application relative path to an asset file or bundle. Or a URL of an external resource.</param>
            <param name="pageLocation">The optional page location of the referenced bundle. This controls where it will be rendered.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.Reference``1(System.String,System.String)">
            <summary>
            Adds a reference to a bundle for the current page.
            </summary>
            <param name="assetPathOrBundlePathOrUrl">Either an application relative path to an asset file or bundle. Or a URL of an external resource.</param>
            <param name="pageLocation">The optional page location of the referenced bundle. This controls where it will be rendered.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.AddInlineScript(System.String)">
            <summary>
            Adds a page reference to an inline JavaScript block.
            </summary>
            <param name="scriptContent">The JavaScript code.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.AddInlineScript(System.String,System.String)">
            <summary>
            Adds a page reference to an inline JavaScript block.
            </summary>
            <param name="scriptContent">The JavaScript code.</param>
            <param name="pageLocation">The optional page location of the script. This controls where it will be rendered.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.AddInlineScript(System.String,System.String,System.Action{Cassette.Scripts.ScriptBundle})">
            <summary>
            Adds a page reference to an inline JavaScript block.
            </summary>
            <param name="scriptContent">The JavaScript code.</param>
            <param name="pageLocation">The optional page location of the script. This controls where it will be rendered.</param>
            <param name="customizeBundle">The optional delegate used to customize the created bundle before adding it to the collection.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.AddInlineScript(System.Func{System.Object,System.Object})">
            <summary>
            Adds a page reference to an inline JavaScript block.
            </summary>
            <param name="scriptContent">The Razor template for the Javascript code.</param>        
            <code lang="CS">
            @{
              Bundles.AddInlineScript(@&lt;text&gt;
                var foo = "Hello World";
                alert( foo );&lt;/text&gt;);
            }
            </code>
        </member>
        <member name="M:Cassette.Views.Bundles.AddInlineScript(System.Func{System.Object,System.Object},System.String)">
            <summary>
            Adds a page reference to an inline JavaScript block.
            </summary>
            <param name="scriptContent">The Razor template for the Javascript code.</param>     
            <param name="pageLocation">The optional page location of the script. This controls where it will be rendered.</param>   
            <code lang="CS">
            @{
              Bundles.AddInlineScript(@&lt;text&gt;
                var foo = "Hello World";
                alert( foo );&lt;/text&gt;);
            }
            </code>
        </member>
        <member name="M:Cassette.Views.Bundles.AddInlineScript(System.Func{System.Object,System.Object},System.String,System.Action{Cassette.Scripts.ScriptBundle})">
            <summary>
            Adds a page reference to an inline JavaScript block.
            </summary>
            <param name="scriptContent">The Razor template for the Javascript code.</param>
            <param name="pageLocation">The optional page location of the script. This controls where it will be rendered.</param>
            <param name="customizeBundle">The optional delegate used to customize the created bundle before adding it to the collection.</param>
            <code lang="CS">
            @{
              Bundles.AddInlineScript(@&lt;text&gt;
                var foo = "Hello World";
                alert( foo );&lt;/text&gt;);
            }
            </code>
        </member>
        <member name="M:Cassette.Views.Bundles.AddPageData(System.String,System.Object)">
            <summary>
            Add a page reference to a script that initializes a global JavaScript variable with the given data.
            </summary>
            <param name="globalVariable">The name of the global JavaScript variable to assign.</param>
            <param name="data">The data object, serialized into JSON.</param>        
        </member>
        <member name="M:Cassette.Views.Bundles.AddPageData(System.String,System.Object,System.String)">
            <summary>
            Add a page reference to a script that initializes a global JavaScript variable with the given data.
            </summary>
            <param name="globalVariable">The name of the global JavaScript variable to assign.</param>
            <param name="data">The data object, serialized into JSON.</param>        
            <param name="pageLocation">The optional page location of the script. This controls where it will be rendered.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.AddPageData(System.String,System.Object,System.String,System.Action{Cassette.Scripts.ScriptBundle})">
            <summary>
            Add a page reference to a script that initializes a global JavaScript variable with the given data.
            </summary>
            <param name="globalVariable">The name of the global JavaScript variable to assign.</param>
            <param name="data">The data object, serialized into JSON.</param>
            <param name="pageLocation">The optional page location of the script. This controls where it will be rendered.</param>
            <param name="customizeBundle">The optional delegate used to customize the created bundle before adding it to the collection.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.AddPageData(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Add a page reference to a script that initializes a global JavaScript variable with the given data.
            </summary>
            <param name="globalVariable">The name of the global JavaScript variable to assign.</param>
            <param name="data">The dictionary of data, serialized into JSON.</param>        
        </member>
        <member name="M:Cassette.Views.Bundles.AddPageData(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.String)">
            <summary>
            Add a page reference to a script that initializes a global JavaScript variable with the given data.
            </summary>
            <param name="globalVariable">The name of the global JavaScript variable to assign.</param>
            <param name="data">The dictionary of data, serialized into JSON.</param>        
            <param name="pageLocation">The optional page location of the script. This controls where it will be rendered.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.AddPageData(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.String,System.Action{Cassette.Scripts.ScriptBundle})">
            <summary>
            Add a page reference to a script that initializes a global JavaScript variable with the given data.
            </summary>
            <param name="globalVariable">The name of the global JavaScript variable to assign.</param>
            <param name="data">The dictionary of data, serialized into JSON.</param>
            <param name="pageLocation">The optional page location of the script. This controls where it will be rendered.</param>
            <param name="customizeBundle">The optional delegate used to customize the created bundle before adding it to the collection.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.RenderScripts">
            <summary>
            Renders the required HTML elements for the scripts referenced by the current page.
            </summary>        
            <returns>HTML script elements.</returns>
        </member>
        <member name="M:Cassette.Views.Bundles.RenderScripts(System.String)">
            <summary>
            Renders the required HTML elements for the scripts referenced by the current page.
            </summary>
            <param name="pageLocation">The optional page location being rendered. Only scripts with this location are rendered.</param>
            <returns>HTML script elements.</returns>
        </member>
        <member name="M:Cassette.Views.Bundles.RenderStylesheets">
            <summary>
            Renders the required HTML elements for the stylesheets referenced by the current page.
            </summary>        
            <returns>HTML stylesheet link elements.</returns>
        </member>
        <member name="M:Cassette.Views.Bundles.RenderStylesheets(System.String)">
            <summary>
            Renders the required HTML elements for the stylesheets referenced by the current page.
            </summary>
            <param name="pageLocation">The optional page location being rendered. Only stylesheets with this location are rendered.</param>
            <returns>HTML stylesheet link elements.</returns>
        </member>
        <member name="M:Cassette.Views.Bundles.RenderHtmlTemplates">
            <summary>
            Renders the required HTML elements for the HTML templates referenced by the current page.
            </summary>        
            <returns>HTML script elements.</returns>
        </member>
        <member name="M:Cassette.Views.Bundles.RenderHtmlTemplates(System.String)">
            <summary>
            Renders the required HTML elements for the HTML templates referenced by the current page.
            </summary>
            <param name="pageLocation">The optional page location being rendered. Only HTML templates with this location are rendered.</param>
            <returns>HTML script elements.</returns>
        </member>
        <member name="M:Cassette.Views.Bundles.Url(System.String)">
            <summary>
            Returns the URL of the bundle with the given path.
            </summary>
            <param name="bundlePath">The path of the bundle.</param>
            <returns>The URL of the bundle.</returns>
        </member>
        <member name="M:Cassette.Views.Bundles.Url``1(System.String)">
            <summary>
            Returns the URL of the bundle with the given path.
            </summary>
            <param name="bundlePath">The path of the bundle.</param>
            <typeparamref name="T">Type of bundle.</typeparamref>
            <returns>The URL of the bundle.</returns>
        </member>
        <member name="M:Cassette.Views.Bundles.GetReferencedBundles">
            <summary>
            Gets the bundles that have been referenced during the current request.
            </summary>        
        </member>
        <member name="M:Cassette.Views.Bundles.GetReferencedBundles(System.String)">
            <summary>
            Gets the bundles that have been referenced during the current request.
            </summary>
            <param name="pageLocation">Optional. The page location of bundles to return.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.GetReferencedBundleUrls``1">
            <summary>
            Get the URLs for bundles that have been referenced during the current request.
            </summary>
            <typeparam name="T">The type of bundles.</typeparam>        
        </member>
        <member name="M:Cassette.Views.Bundles.GetReferencedBundleUrls``1(System.String)">
            <summary>
            Get the URLs for bundles that have been referenced during the current request.
            </summary>
            <typeparam name="T">The type of bundles.</typeparam>
            <param name="pageLocation">Optional. The page location of bundles to return.</param>
        </member>
        <member name="M:Cassette.Views.Bundles.FileUrl(System.String)">
            <summary>
            Returns the Cassette cache-friendly URL for a file, such as an image.
            </summary>
            <param name="applicationRelativeFilePath">The application relative file path of the file.</param>
        </member>
        <member name="P:Cassette.Views.Bundles.Helper">
            <summary>
            The helper implementation used by the static methods of this class.
            </summary>
        </member>
        <member name="T:Cassette.Views.BundlesHelper">
            <summary>
            Provides the implementation for the static <see cref="T:Cassette.Views.Bundles"/> class.
            </summary>
        </member>
    </members>
</doc>
